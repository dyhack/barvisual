/*
 * This file is generated by jOOQ.
*/
package cn.dyhack.barvisual.pojo;


import cn.dyhack.barvisual.pojo.tables.Bars;
import cn.dyhack.barvisual.pojo.tables.BarsCopy;
import cn.dyhack.barvisual.pojo.tables.Persons;
import cn.dyhack.barvisual.pojo.tables.Province;
import cn.dyhack.barvisual.pojo.tables.SichuanProvince;
import cn.dyhack.barvisual.pojo.tables.Suspects;
import cn.dyhack.barvisual.pojo.tables.Total;
import cn.dyhack.barvisual.pojo.tables.records.BarsCopyRecord;
import cn.dyhack.barvisual.pojo.tables.records.BarsRecord;
import cn.dyhack.barvisual.pojo.tables.records.PersonsRecord;
import cn.dyhack.barvisual.pojo.tables.records.ProvinceRecord;
import cn.dyhack.barvisual.pojo.tables.records.SichuanProvinceRecord;
import cn.dyhack.barvisual.pojo.tables.records.SuspectsRecord;
import cn.dyhack.barvisual.pojo.tables.records.TotalRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>internet_bar_backup</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<TotalRecord, Integer> IDENTITY_TOTAL = Identities0.IDENTITY_TOTAL;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BarsRecord> KEY_BARS_PRIMARY = UniqueKeys0.KEY_BARS_PRIMARY;
    public static final UniqueKey<BarsCopyRecord> KEY_BARS_COPY_PRIMARY = UniqueKeys0.KEY_BARS_COPY_PRIMARY;
    public static final UniqueKey<PersonsRecord> KEY_PERSONS_PRIMARY = UniqueKeys0.KEY_PERSONS_PRIMARY;
    public static final UniqueKey<PersonsRecord> KEY_PERSONS_ID = UniqueKeys0.KEY_PERSONS_ID;
    public static final UniqueKey<ProvinceRecord> KEY_PROVINCE_PRIMARY = UniqueKeys0.KEY_PROVINCE_PRIMARY;
    public static final UniqueKey<SichuanProvinceRecord> KEY_SICHUAN_PROVINCE_PRIMARY = UniqueKeys0.KEY_SICHUAN_PROVINCE_PRIMARY;
    public static final UniqueKey<SuspectsRecord> KEY_SUSPECTS_PRIMARY = UniqueKeys0.KEY_SUSPECTS_PRIMARY;
    public static final UniqueKey<TotalRecord> KEY_TOTAL_PRIMARY = UniqueKeys0.KEY_TOTAL_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<TotalRecord, Integer> IDENTITY_TOTAL = Internal.createIdentity(Total.TOTAL, Total.TOTAL.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<BarsRecord> KEY_BARS_PRIMARY = Internal.createUniqueKey(Bars.BARS, "KEY_bars_PRIMARY", Bars.BARS.ID);
        public static final UniqueKey<BarsCopyRecord> KEY_BARS_COPY_PRIMARY = Internal.createUniqueKey(BarsCopy.BARS_COPY, "KEY_bars_copy_PRIMARY", BarsCopy.BARS_COPY.ID);
        public static final UniqueKey<PersonsRecord> KEY_PERSONS_PRIMARY = Internal.createUniqueKey(Persons.PERSONS, "KEY_persons_PRIMARY", Persons.PERSONS.ID);
        public static final UniqueKey<PersonsRecord> KEY_PERSONS_ID = Internal.createUniqueKey(Persons.PERSONS, "KEY_persons_ID", Persons.PERSONS.ID);
        public static final UniqueKey<ProvinceRecord> KEY_PROVINCE_PRIMARY = Internal.createUniqueKey(Province.PROVINCE, "KEY_province_PRIMARY", Province.PROVINCE.AREAID);
        public static final UniqueKey<SichuanProvinceRecord> KEY_SICHUAN_PROVINCE_PRIMARY = Internal.createUniqueKey(SichuanProvince.SICHUAN_PROVINCE, "KEY_sichuan_province_PRIMARY", SichuanProvince.SICHUAN_PROVINCE.AREAID);
        public static final UniqueKey<SuspectsRecord> KEY_SUSPECTS_PRIMARY = Internal.createUniqueKey(Suspects.SUSPECTS, "KEY_suspects_PRIMARY", Suspects.SUSPECTS.PERSONID);
        public static final UniqueKey<TotalRecord> KEY_TOTAL_PRIMARY = Internal.createUniqueKey(Total.TOTAL, "KEY_total_PRIMARY", Total.TOTAL.ID);
    }
}
