/*
 * This file is generated by jOOQ.
*/
package cn.dyhack.barvisual.pojo.tables;


import cn.dyhack.barvisual.pojo.Indexes;
import cn.dyhack.barvisual.pojo.InternetBarBackup;
import cn.dyhack.barvisual.pojo.Keys;
import cn.dyhack.barvisual.pojo.tables.records.TotalRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Total extends TableImpl<TotalRecord> {

    private static final long serialVersionUID = 620337963;

    /**
     * The reference instance of <code>internet_bar_backup.total</code>
     */
    public static final Total TOTAL = new Total();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TotalRecord> getRecordType() {
        return TotalRecord.class;
    }

    /**
     * The column <code>internet_bar_backup.total.id</code>.
     */
    public final TableField<TotalRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>internet_bar_backup.total.personid</code>.
     */
    public final TableField<TotalRecord, String> PERSONID = createField("personid", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>internet_bar_backup.total.barid</code>.
     */
    public final TableField<TotalRecord, String> BARID = createField("barid", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>internet_bar_backup.total.sex</code>.
     */
    public final TableField<TotalRecord, String> SEX = createField("sex", org.jooq.impl.SQLDataType.VARCHAR(16), this, "");

    /**
     * The column <code>internet_bar_backup.total.name</code>.
     */
    public final TableField<TotalRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>internet_bar_backup.total.onlinetime</code>.
     */
    public final TableField<TotalRecord, Long> ONLINETIME = createField("onlinetime", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>internet_bar_backup.total.offlinetime</code>.
     */
    public final TableField<TotalRecord, Long> OFFLINETIME = createField("offlinetime", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>internet_bar_backup.total.areaid</code>.
     */
    public final TableField<TotalRecord, Integer> AREAID = createField("areaid", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>internet_bar_backup.total.birthday</code>.
     */
    public final TableField<TotalRecord, Long> BIRTHDAY = createField("birthday", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>internet_bar_backup.total.float_population</code>.
     */
    public final TableField<TotalRecord, Byte> FLOAT_POPULATION = createField("float_population", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * Create a <code>internet_bar_backup.total</code> table reference
     */
    public Total() {
        this(DSL.name("total"), null);
    }

    /**
     * Create an aliased <code>internet_bar_backup.total</code> table reference
     */
    public Total(String alias) {
        this(DSL.name(alias), TOTAL);
    }

    /**
     * Create an aliased <code>internet_bar_backup.total</code> table reference
     */
    public Total(Name alias) {
        this(alias, TOTAL);
    }

    private Total(Name alias, Table<TotalRecord> aliased) {
        this(alias, aliased, null);
    }

    private Total(Name alias, Table<TotalRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return InternetBarBackup.INTERNET_BAR_BACKUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TOTAL_AREAID, Indexes.TOTAL_BARID, Indexes.TOTAL_BIRTHDAY, Indexes.TOTAL_FLOAT_POPULATION, Indexes.TOTAL_NAME, Indexes.TOTAL_OFFLINETIME, Indexes.TOTAL_ONLINETIME, Indexes.TOTAL_ONLINETIME_OFFLINETIME, Indexes.TOTAL_PERSONID, Indexes.TOTAL_PRIMARY, Indexes.TOTAL_SEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TotalRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TOTAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TotalRecord> getPrimaryKey() {
        return Keys.KEY_TOTAL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TotalRecord>> getKeys() {
        return Arrays.<UniqueKey<TotalRecord>>asList(Keys.KEY_TOTAL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Total as(String alias) {
        return new Total(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Total as(Name alias) {
        return new Total(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Total rename(String name) {
        return new Total(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Total rename(Name name) {
        return new Total(name, null);
    }
}
