/*
 * This file is generated by jOOQ.
*/
package cn.dyhack.barvisual.pojo.tables.daos;


import cn.dyhack.barvisual.pojo.tables.Total;
import cn.dyhack.barvisual.pojo.tables.records.TotalRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TotalDao extends DAOImpl<TotalRecord, cn.dyhack.barvisual.pojo.tables.pojos.Total, Integer> {

    /**
     * Create a new TotalDao without any configuration
     */
    public TotalDao() {
        super(Total.TOTAL, cn.dyhack.barvisual.pojo.tables.pojos.Total.class);
    }

    /**
     * Create a new TotalDao with an attached configuration
     */
    public TotalDao(Configuration configuration) {
        super(Total.TOTAL, cn.dyhack.barvisual.pojo.tables.pojos.Total.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(cn.dyhack.barvisual.pojo.tables.pojos.Total object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<cn.dyhack.barvisual.pojo.tables.pojos.Total> fetchById(Integer... values) {
        return fetch(Total.TOTAL.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public cn.dyhack.barvisual.pojo.tables.pojos.Total fetchOneById(Integer value) {
        return fetchOne(Total.TOTAL.ID, value);
    }

    /**
     * Fetch records that have <code>personid IN (values)</code>
     */
    public List<cn.dyhack.barvisual.pojo.tables.pojos.Total> fetchByPersonid(String... values) {
        return fetch(Total.TOTAL.PERSONID, values);
    }

    /**
     * Fetch records that have <code>barid IN (values)</code>
     */
    public List<cn.dyhack.barvisual.pojo.tables.pojos.Total> fetchByBarid(String... values) {
        return fetch(Total.TOTAL.BARID, values);
    }

    /**
     * Fetch records that have <code>sex IN (values)</code>
     */
    public List<cn.dyhack.barvisual.pojo.tables.pojos.Total> fetchBySex(String... values) {
        return fetch(Total.TOTAL.SEX, values);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<cn.dyhack.barvisual.pojo.tables.pojos.Total> fetchByName(String... values) {
        return fetch(Total.TOTAL.NAME, values);
    }

    /**
     * Fetch records that have <code>onlinetime IN (values)</code>
     */
    public List<cn.dyhack.barvisual.pojo.tables.pojos.Total> fetchByOnlinetime(Long... values) {
        return fetch(Total.TOTAL.ONLINETIME, values);
    }

    /**
     * Fetch records that have <code>offlinetime IN (values)</code>
     */
    public List<cn.dyhack.barvisual.pojo.tables.pojos.Total> fetchByOfflinetime(Long... values) {
        return fetch(Total.TOTAL.OFFLINETIME, values);
    }

    /**
     * Fetch records that have <code>areaid IN (values)</code>
     */
    public List<cn.dyhack.barvisual.pojo.tables.pojos.Total> fetchByAreaid(Integer... values) {
        return fetch(Total.TOTAL.AREAID, values);
    }

    /**
     * Fetch records that have <code>birthday IN (values)</code>
     */
    public List<cn.dyhack.barvisual.pojo.tables.pojos.Total> fetchByBirthday(Long... values) {
        return fetch(Total.TOTAL.BIRTHDAY, values);
    }

    /**
     * Fetch records that have <code>float_population IN (values)</code>
     */
    public List<cn.dyhack.barvisual.pojo.tables.pojos.Total> fetchByFloatPopulation(Byte... values) {
        return fetch(Total.TOTAL.FLOAT_POPULATION, values);
    }
}
