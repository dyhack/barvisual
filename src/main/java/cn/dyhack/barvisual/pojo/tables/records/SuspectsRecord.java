/*
 * This file is generated by jOOQ.
*/
package cn.dyhack.barvisual.pojo.tables.records;


import cn.dyhack.barvisual.pojo.tables.Suspects;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SuspectsRecord extends UpdatableRecordImpl<SuspectsRecord> implements Record2<String, Integer> {

    private static final long serialVersionUID = -657908996;

    /**
     * Setter for <code>internet_bar_backup.suspects.personid</code>. 上网用户的id
     */
    public void setPersonid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>internet_bar_backup.suspects.personid</code>. 上网用户的id
     */
    public String getPersonid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>internet_bar_backup.suspects.count</code>. 上网次数
     */
    public void setCount(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>internet_bar_backup.suspects.count</code>. 上网次数
     */
    public Integer getCount() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Suspects.SUSPECTS.PERSONID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Suspects.SUSPECTS.COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getPersonid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getPersonid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SuspectsRecord value1(String value) {
        setPersonid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SuspectsRecord value2(Integer value) {
        setCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SuspectsRecord values(String value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SuspectsRecord
     */
    public SuspectsRecord() {
        super(Suspects.SUSPECTS);
    }

    /**
     * Create a detached, initialised SuspectsRecord
     */
    public SuspectsRecord(String personid, Integer count) {
        super(Suspects.SUSPECTS);

        set(0, personid);
        set(1, count);
    }
}
