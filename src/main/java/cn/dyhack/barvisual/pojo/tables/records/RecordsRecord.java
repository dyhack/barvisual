/*
 * This file is generated by jOOQ.
*/
package cn.dyhack.barvisual.pojo.tables.records;


import cn.dyhack.barvisual.pojo.tables.Records;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RecordsRecord extends TableRecordImpl<RecordsRecord> implements Record4<String, String, Long, Long> {

    private static final long serialVersionUID = -739341662;

    /**
     * Setter for <code>internet_bar_backup.records.barid</code>.
     */
    public void setBarid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>internet_bar_backup.records.barid</code>.
     */
    public String getBarid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>internet_bar_backup.records.personid</code>.
     */
    public void setPersonid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>internet_bar_backup.records.personid</code>.
     */
    public String getPersonid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>internet_bar_backup.records.onlinetime</code>.
     */
    public void setOnlinetime(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>internet_bar_backup.records.onlinetime</code>.
     */
    public Long getOnlinetime() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>internet_bar_backup.records.offlinetime</code>.
     */
    public void setOfflinetime(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>internet_bar_backup.records.offlinetime</code>.
     */
    public Long getOfflinetime() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, Long, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, Long, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Records.RECORDS.BARID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Records.RECORDS.PERSONID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return Records.RECORDS.ONLINETIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return Records.RECORDS.OFFLINETIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getBarid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getPersonid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getOnlinetime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component4() {
        return getOfflinetime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getBarid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getPersonid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getOnlinetime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getOfflinetime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RecordsRecord value1(String value) {
        setBarid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RecordsRecord value2(String value) {
        setPersonid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RecordsRecord value3(Long value) {
        setOnlinetime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RecordsRecord value4(Long value) {
        setOfflinetime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RecordsRecord values(String value1, String value2, Long value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RecordsRecord
     */
    public RecordsRecord() {
        super(Records.RECORDS);
    }

    /**
     * Create a detached, initialised RecordsRecord
     */
    public RecordsRecord(String barid, String personid, Long onlinetime, Long offlinetime) {
        super(Records.RECORDS);

        set(0, barid);
        set(1, personid);
        set(2, onlinetime);
        set(3, offlinetime);
    }
}
