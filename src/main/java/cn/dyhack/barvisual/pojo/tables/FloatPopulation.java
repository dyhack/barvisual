/*
 * This file is generated by jOOQ.
*/
package cn.dyhack.barvisual.pojo.tables;


import cn.dyhack.barvisual.pojo.Indexes;
import cn.dyhack.barvisual.pojo.InternetBarBackup;
import cn.dyhack.barvisual.pojo.tables.records.FloatPopulationRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FloatPopulation extends TableImpl<FloatPopulationRecord> {

    private static final long serialVersionUID = -2070311900;

    /**
     * The reference instance of <code>internet_bar_backup.float_population</code>
     */
    public static final FloatPopulation FLOAT_POPULATION = new FloatPopulation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FloatPopulationRecord> getRecordType() {
        return FloatPopulationRecord.class;
    }

    /**
     * The column <code>internet_bar_backup.float_population.personid</code>.
     */
    public final TableField<FloatPopulationRecord, String> PERSONID = createField("personid", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>internet_bar_backup.float_population.barid</code>.
     */
    public final TableField<FloatPopulationRecord, String> BARID = createField("barid", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>internet_bar_backup.float_population.sex</code>.
     */
    public final TableField<FloatPopulationRecord, String> SEX = createField("sex", org.jooq.impl.SQLDataType.VARCHAR(16), this, "");

    /**
     * The column <code>internet_bar_backup.float_population.name</code>.
     */
    public final TableField<FloatPopulationRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>internet_bar_backup.float_population.onlinetime</code>.
     */
    public final TableField<FloatPopulationRecord, Long> ONLINETIME = createField("onlinetime", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>internet_bar_backup.float_population.offlinetime</code>.
     */
    public final TableField<FloatPopulationRecord, Long> OFFLINETIME = createField("offlinetime", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>internet_bar_backup.float_population.areaid</code>.
     */
    public final TableField<FloatPopulationRecord, Integer> AREAID = createField("areaid", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>internet_bar_backup.float_population.birthday</code>.
     */
    public final TableField<FloatPopulationRecord, Long> BIRTHDAY = createField("birthday", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>internet_bar_backup.float_population.float_population</code>.
     */
    public final TableField<FloatPopulationRecord, Byte> FLOAT_POPULATION_ = createField("float_population", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * Create a <code>internet_bar_backup.float_population</code> table reference
     */
    public FloatPopulation() {
        this(DSL.name("float_population"), null);
    }

    /**
     * Create an aliased <code>internet_bar_backup.float_population</code> table reference
     */
    public FloatPopulation(String alias) {
        this(DSL.name(alias), FLOAT_POPULATION);
    }

    /**
     * Create an aliased <code>internet_bar_backup.float_population</code> table reference
     */
    public FloatPopulation(Name alias) {
        this(alias, FLOAT_POPULATION);
    }

    private FloatPopulation(Name alias, Table<FloatPopulationRecord> aliased) {
        this(alias, aliased, null);
    }

    private FloatPopulation(Name alias, Table<FloatPopulationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return InternetBarBackup.INTERNET_BAR_BACKUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FLOAT_POPULATION_AREAID, Indexes.FLOAT_POPULATION_BARID, Indexes.FLOAT_POPULATION_BIRTHDAY, Indexes.FLOAT_POPULATION_OFFLINETIME, Indexes.FLOAT_POPULATION_ONLINETIME, Indexes.FLOAT_POPULATION_PERSONID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FloatPopulation as(String alias) {
        return new FloatPopulation(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FloatPopulation as(Name alias) {
        return new FloatPopulation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FloatPopulation rename(String name) {
        return new FloatPopulation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FloatPopulation rename(Name name) {
        return new FloatPopulation(name, null);
    }
}
