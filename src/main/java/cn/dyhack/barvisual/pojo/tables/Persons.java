/*
 * This file is generated by jOOQ.
*/
package cn.dyhack.barvisual.pojo.tables;


import cn.dyhack.barvisual.pojo.Indexes;
import cn.dyhack.barvisual.pojo.InternetBarBackup;
import cn.dyhack.barvisual.pojo.Keys;
import cn.dyhack.barvisual.pojo.tables.records.PersonsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Persons extends TableImpl<PersonsRecord> {

    private static final long serialVersionUID = -924273881;

    /**
     * The reference instance of <code>internet_bar_backup.persons</code>
     */
    public static final Persons PERSONS = new Persons();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PersonsRecord> getRecordType() {
        return PersonsRecord.class;
    }

    /**
     * The column <code>internet_bar_backup.persons.id</code>. 上网人编号
     */
    public final TableField<PersonsRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "上网人编号");

    /**
     * The column <code>internet_bar_backup.persons.name</code>. 上网人名称
     */
    public final TableField<PersonsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "上网人名称");

    /**
     * The column <code>internet_bar_backup.persons.sex</code>. 上网人性别
     */
    public final TableField<PersonsRecord, Byte> SEX = createField("sex", org.jooq.impl.SQLDataType.TINYINT, this, "上网人性别");

    /**
     * The column <code>internet_bar_backup.persons.areaid</code>. 上网人籍贯
     */
    public final TableField<PersonsRecord, String> AREAID = createField("areaid", org.jooq.impl.SQLDataType.VARCHAR(255), this, "上网人籍贯");

    /**
     * The column <code>internet_bar_backup.persons.birthday</code>. 上网人出身时间戳
     */
    public final TableField<PersonsRecord, Long> BIRTHDAY = createField("birthday", org.jooq.impl.SQLDataType.BIGINT, this, "上网人出身时间戳");

    /**
     * Create a <code>internet_bar_backup.persons</code> table reference
     */
    public Persons() {
        this(DSL.name("persons"), null);
    }

    /**
     * Create an aliased <code>internet_bar_backup.persons</code> table reference
     */
    public Persons(String alias) {
        this(DSL.name(alias), PERSONS);
    }

    /**
     * Create an aliased <code>internet_bar_backup.persons</code> table reference
     */
    public Persons(Name alias) {
        this(alias, PERSONS);
    }

    private Persons(Name alias, Table<PersonsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Persons(Name alias, Table<PersonsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return InternetBarBackup.INTERNET_BAR_BACKUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PERSONS_B, Indexes.PERSONS_BIRTH, Indexes.PERSONS_ID, Indexes.PERSONS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PersonsRecord> getPrimaryKey() {
        return Keys.KEY_PERSONS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PersonsRecord>> getKeys() {
        return Arrays.<UniqueKey<PersonsRecord>>asList(Keys.KEY_PERSONS_PRIMARY, Keys.KEY_PERSONS_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Persons as(String alias) {
        return new Persons(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Persons as(Name alias) {
        return new Persons(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Persons rename(String name) {
        return new Persons(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Persons rename(Name name) {
        return new Persons(name, null);
    }
}
